<pre>

this file has the extension "htm" because I do not know how to configure github
pages to publish with the extension "txt".

the most recent dup goes here.

2022-05-11. dup to 500-gig Samsung T7. when you plug it in, Fedora 34 will ask
for the passphrase. after you enter it, the backup (made with `cp -ax` on /da/)
is located in /run/media/r/dup/2022-05-11. there are also earlier dups there:
one made 04-22 and one made last year.

2022-05-11. 8-gig cruzer #3. Fedora 36 everything installer, created with
Fedora Media Writer (which might be relevant to secure boot). 

2022-02-18. on the Kingston, same method as last dup.

2022-01-25. on the Kingston 2.5-inch sata ssd in the BYTECC enclosure :: on the
big partion, which is encrypted :: in
/run/media/r/fedora_sensitivf34/home00/dup2022-01-25 :: is a dup of /da made
with `cp -ax`.

2021-11-11. the new portable ssd, 500 gigs, Samsung T7 :: 48-gig encrypted 
ext4 partition.

2021-10-03. 8-gig cruzer #1. location as of 2021 Oct 28: ewater hallway cubby.
dup of /da. although in the future I can prol do better than tar, and although
running tar as root might've been the wrong move, I used `sudo tar` to make a
tarball and then to extract the tarball onto a freshly created encrypted ext4
according to the method in /c/dup2020 (with changes).
add 2022 Mar 20. I almost re-used this one, but did not.

2021-07-20. 8-gig cruzer #2. location as of 2021 Oct 28: cata. dup of /da
made by the method described in /c/dup2020. then I made a tarball as follows
(advantage: I could check the approximate space requirements quickly) then
untarred the ball into a subdirectory of the newly formatted volume.

    cd / && time sudo tar -c -f da.tar --exclude=dup_btr ./da

2021-03-23. the only big partition (partition 3) on hdmm2 (an ssd drive
currently inside mbnuc). btrfs dups made 2021 Mar 23 and 2021 Mar 20.

2021-03-13. partitions 1 and 2 on the nvme drive have dups made 2021 Mar 12 or
13.

2021-03-11. the 16-gig tiny stainless drive. Fedora 34 prerelease everything
install iso file. used to install what I am using now.

2020-11-30. mbmm's /o (1-terabyte hard drive). current location: inside the
nuc8. contains 8-gig dups. e.g., one made 2020 Apr 14.
Device          Start        End    Sectors   Size Type
/dev/sda1          40     409639     409600   200M EFI System
/dev/sda2      409640 1952255591 1951845952 930.7G Apple HFS/HFS+
/dev/sda3  1952255592 1953525127    1269536 619.9M Apple boot

the failing original 500-meg hard drive of mbmm. location: top shelf of
linen closet.

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Model: Samsung SSD 970 EVO Plus 1TB (nvme)
Disk /dev/nvme0n1: 1000GB
Sector size (logical/physical): 512B/512B
Partition Table: gpt
Disk Flags: 

Number  Start   End     Size    File system  Name                  Flags
 3      1049kB  1074MB  1073MB  fat32        EFI System Partition  boot, esp
 1      1074MB  54.8GB  53.7GB  ext4         nix
 4      54.8GB  55.9GB  1100MB  ext4         boot
 5      55.9GB  556GB   500GB                btrfs
 2      987GB   1000GB  12.9GB  ext4         fulldup

--from cfdisk--
Device                      Start           End      Sectors      Size
/dev/nvme0n1p1            2097152     106954752    104857601       50G   
/dev/nvme0n1p2         1928359344    1953525134     25165791       12G
/dev/nvme0n1p3               2048       2097151      2095104     1023M
/dev/nvme0n1p4          106956800     109105239      2148440        1G
/dev/nvme0n1p5          109107200    1085669699    976562500    465.7G
Free space             1085671424    1928359343    842687920    401.8G
--/from cfdisk--

Model: ATA Samsung SSD 840 (scsi)
Disk /dev/sda: 250GB
Sector size (logical/physical): 512B/512B
Partition Table: gpt
Disk Flags: 

Number  Start   End     Size    File system  Name                  Flags
 1      1049kB  630MB   629MB   fat32        EFI System Partition  boot, esp
 2      630MB   1704MB  1074MB  ext4
 3      1704MB  250GB   248GB   btrfs

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

if you run tar as non-root, it will convert the owner of the extracted files to
the invoking user. if run as root, it will preserve the ownership data in the
archive (but that behavior can be overridden with flags).

